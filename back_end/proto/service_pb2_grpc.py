# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from proto import requests_pb2 as proto_dot_requests__pb2
from proto import responses_pb2 as proto_dot_responses__pb2


class ServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetSchedule = channel.unary_unary(
                '/Service/GetSchedule',
                request_serializer=proto_dot_requests__pb2.ScheduleRequest.SerializeToString,
                response_deserializer=proto_dot_responses__pb2.ScheduleResponse.FromString,
                )
        self.RegisterNotifications = channel.unary_unary(
                '/Service/RegisterNotifications',
                request_serializer=proto_dot_requests__pb2.NotificationRequest.SerializeToString,
                response_deserializer=proto_dot_responses__pb2.NotificationResponse.FromString,
                )
        self.GetProfessors = channel.unary_unary(
                '/Service/GetProfessors',
                request_serializer=proto_dot_requests__pb2.ProfessorRequest.SerializeToString,
                response_deserializer=proto_dot_responses__pb2.ProfessorResponse.FromString,
                )
        self.GetCourses = channel.unary_unary(
                '/Service/GetCourses',
                request_serializer=proto_dot_requests__pb2.CourseRequest.SerializeToString,
                response_deserializer=proto_dot_responses__pb2.CourseResponse.FromString,
                )
        self.GetMajors = channel.unary_unary(
                '/Service/GetMajors',
                request_serializer=proto_dot_requests__pb2.MajorRequest.SerializeToString,
                response_deserializer=proto_dot_responses__pb2.MajorResponse.FromString,
                )
        self.Debug = channel.unary_unary(
                '/Service/Debug',
                request_serializer=proto_dot_requests__pb2.DebugRequest.SerializeToString,
                response_deserializer=proto_dot_responses__pb2.DebugResponse.FromString,
                )


class ServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetSchedule(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterNotifications(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProfessors(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCourses(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMajors(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Debug(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetSchedule': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSchedule,
                    request_deserializer=proto_dot_requests__pb2.ScheduleRequest.FromString,
                    response_serializer=proto_dot_responses__pb2.ScheduleResponse.SerializeToString,
            ),
            'RegisterNotifications': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterNotifications,
                    request_deserializer=proto_dot_requests__pb2.NotificationRequest.FromString,
                    response_serializer=proto_dot_responses__pb2.NotificationResponse.SerializeToString,
            ),
            'GetProfessors': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProfessors,
                    request_deserializer=proto_dot_requests__pb2.ProfessorRequest.FromString,
                    response_serializer=proto_dot_responses__pb2.ProfessorResponse.SerializeToString,
            ),
            'GetCourses': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCourses,
                    request_deserializer=proto_dot_requests__pb2.CourseRequest.FromString,
                    response_serializer=proto_dot_responses__pb2.CourseResponse.SerializeToString,
            ),
            'GetMajors': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMajors,
                    request_deserializer=proto_dot_requests__pb2.MajorRequest.FromString,
                    response_serializer=proto_dot_responses__pb2.MajorResponse.SerializeToString,
            ),
            'Debug': grpc.unary_unary_rpc_method_handler(
                    servicer.Debug,
                    request_deserializer=proto_dot_requests__pb2.DebugRequest.FromString,
                    response_serializer=proto_dot_responses__pb2.DebugResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Service', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Service(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetSchedule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Service/GetSchedule',
            proto_dot_requests__pb2.ScheduleRequest.SerializeToString,
            proto_dot_responses__pb2.ScheduleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RegisterNotifications(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Service/RegisterNotifications',
            proto_dot_requests__pb2.NotificationRequest.SerializeToString,
            proto_dot_responses__pb2.NotificationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetProfessors(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Service/GetProfessors',
            proto_dot_requests__pb2.ProfessorRequest.SerializeToString,
            proto_dot_responses__pb2.ProfessorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCourses(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Service/GetCourses',
            proto_dot_requests__pb2.CourseRequest.SerializeToString,
            proto_dot_responses__pb2.CourseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMajors(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Service/GetMajors',
            proto_dot_requests__pb2.MajorRequest.SerializeToString,
            proto_dot_responses__pb2.MajorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Debug(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Service/Debug',
            proto_dot_requests__pb2.DebugRequest.SerializeToString,
            proto_dot_responses__pb2.DebugResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
